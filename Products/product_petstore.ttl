@base          <https://www.example.com/service/#product_petstore> .
@prefix owl:   <http://www.w3.org/2002/07/owl#> .
@prefix rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix sh:    <http://www.w3.org/ns/shacl#> .
@prefix openapi: <http://www.intelligence.tuc.gr/ns/open-api#> .
@prefix xsd:   <http://www.w3.org/2001/XMLSchema#> .
@prefix rdfs:  <http://www.w3.org/2000/01/rdf-schema#> .

openapi:attribute  a  rdf:Property ;
        rdfs:comment  "Declares whether the property definition translates to an attribute instead of an element"@en ;
        rdfs:domain   openapi:XML ;
        rdfs:label    "allowReserved"@en ;
        rdfs:range    xsd:boolean .

sh:detail  a              rdf:Property ;
        rdfs:comment      "Links a result with other results that provide more details, for example to describe violations against nested shapes."@en ;
        rdfs:domain       sh:AbstractResult ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "detail"@en ;
        rdfs:range        sh:AbstractResult .

sh:JSExecutable  a        rdfs:Class ;
        rdfs:comment      "Abstract base class of resources that declare an executable JavaScript."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "JavaScript executable"@en ;
        rdfs:subClassOf   rdfs:Resource .

sh:SPARQLConstraintComponent
        a                 sh:ConstraintComponent ;
        rdfs:comment      "A constraint component that can be used to define constraints based on SPARQL queries."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "SPARQL constraint component"@en ;
        sh:parameter      sh:SPARQLConstraintComponent-sparql .

openapi:deepObject  a  openapi:Style .

openapi:spaceDelimited
        a       openapi:Style .

sh:targetNode  a          rdf:Property ;
        rdfs:comment      "Links a shape to individual nodes, indicating that these nodes must conform to the shape."@en ;
        rdfs:domain       sh:Shape ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "target node"@en .

sh:ExpressionConstraintComponent-expression
        a                 sh:Parameter ;
        rdfs:isDefinedBy  sh: ;
        sh:path           sh:expression .

sh:deactivated  a         rdf:Property ;
        rdfs:comment      "If set to true then all nodes conform to this."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "deactivated"@en ;
        rdfs:range        xsd:boolean .

openapi:content  a    rdf:Property ;
        rdfs:comment  "The content of a parameter"@en ;
        rdfs:label    "content"@en ;
        rdfs:range    openapi:MediaType .

openapi:prefix  a     rdf:Property ;
        rdfs:comment  "The prefix to be used for the XML name"@en ;
        rdfs:domain   openapi:XML ;
        rdfs:label    "prefix"@en ;
        rdfs:range    xsd:string .

sh:lessThan  a            rdf:Property ;
        rdfs:comment      "Specifies a property that must have smaller values than the value nodes."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "less than"@en ;
        rdfs:range        rdf:Property .

sh:sourceConstraint  a    rdf:Property ;
        rdfs:comment      "The constraint that was validated when the result was produced."@en ;
        rdfs:domain       sh:AbstractResult ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "source constraint"@en .

sh:targetClass  a         rdf:Property ;
        rdfs:comment      "Links a shape to a class, indicating that all instances of the class must conform to the shape."@en ;
        rdfs:domain       sh:Shape ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "target class"@en ;
        rdfs:range        rdfs:Class .

sh:ClosedConstraintComponent-closed
        a                 sh:Parameter ;
        rdfs:isDefinedBy  sh: ;
        sh:datatype       xsd:boolean ;
        sh:path           sh:closed .

sh:Function  a            rdfs:Class ;
        rdfs:comment      "The class of SHACL functions."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Function"@en ;
        rdfs:subClassOf   sh:Parameterizable .

openapi:style  a      rdf:Property ;
        rdfs:comment  "A parameter's style"@en ;
        rdfs:label    "style"@en ;
        rdfs:range    openapi:Style .

sh:InConstraintComponent-in
        a                 sh:Parameter ;
        rdfs:isDefinedBy  sh: ;
        sh:maxCount       1 ;
        sh:path           sh:in .

sh:NodeConstraintComponent-node
        a                 sh:Parameter ;
        rdfs:isDefinedBy  sh: ;
        sh:path           sh:node .

sh:Violation  a           sh:Severity ;
        rdfs:comment      "The severity for a violation validation result."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Violation"@en .

sh:BlankNodeOrIRI  a      sh:NodeKind ;
        rdfs:comment      "The node kind of all blank nodes or IRIs."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Blank node or IRI"@en .

<NewPet_name>  a  rdf:Property .

sh:ResultAnnotation  a    rdfs:Class ;
        rdfs:comment      "A class of result annotations, which define the rules to derive the values of a given annotation property as extra values for a validation result."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Result annotation"@en ;
        rdfs:subClassOf   rdfs:Resource .

sh:JSRule  a              rdfs:Class ;
        rdfs:comment      "The class of SHACL rules expressed using JavaScript."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "JavaScript rule"@en ;
        rdfs:subClassOf   sh:Rule , sh:JSExecutable .

sh:languageIn  a          rdf:Property ;
        rdfs:comment      "Specifies a list of language tags that all value nodes must have."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "language in"@en ;
        rdfs:range        rdf:List .

openapi:uniqueItems  a  rdf:Property ;
        rdfs:label  "uniqueItems"@en ;
        rdfs:range  xsd:boolean .

sh:jsLibrary  a           rdf:Property ;
        rdfs:comment      "Declares which JavaScript libraries are needed to execute this."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "JavaScript library"@en ;
        rdfs:range        sh:JSLibrary .

openapi:binary  a     rdfs:Datatype ;
        rdfs:comment  "any sequence of octets" .

sh:Rule  a                rdfs:Class ;
        rdfs:comment      "The class of SHACL rules. Never instantiated directly."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Rule"@en ;
        rdfs:subClassOf   rdfs:Resource .

openapi:Collection  a  rdfs:Class ;
        rdfs:comment  "A Collection can be used to reference a set of resources"@en ;
        rdfs:label    "Collection"@en .

sh:annotationProperty
        a                 rdf:Property ;
        rdfs:comment      "The annotation property that shall be set."@en ;
        rdfs:domain       sh:ResultAnnotation ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "annotation property"@en ;
        rdfs:range        rdf:Property .

openapi:mapValue  a  rdf:Property ;
        rdfs:domain  openapi:PropertyMapper ;
        rdfs:label   "mapValue"@en ;
        rdfs:range   sh:Shape .

openapi:ApiKey  a        rdfs:Class ;
        rdfs:comment     "ApiKey authentication security scheme"@en ;
        rdfs:label       "ApiKey"@en ;
        rdfs:subClassOf  openapi:Security .

sh:alternativePath  a     rdf:Property ;
        rdfs:comment      "The (single) value of this property must be a list of path elements, representing the elements of alternative paths."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "alternative path"@en ;
        rdfs:range        rdf:List .

openapi:writeOnly  a  rdf:Property ;
        rdfs:comment  "Declares the property as write only"@en ;
        rdfs:label    "writeOnly"@en ;
        rdfs:range    xsd:boolean .

openapi:mediaTypeName
        a            rdf:Property ;
        rdfs:domain  openapi:MediaType ;
        rdfs:label   "mediaTypeName"@en ;
        rdfs:range   xsd:string .

sh:MaxExclusiveConstraintComponent-maxExclusive
        a                 sh:Parameter ;
        rdfs:isDefinedBy  sh: ;
        sh:maxCount       1 ;
        sh:nodeKind       sh:Literal ;
        sh:path           sh:maxExclusive .

[ a                owl:Class ;
  rdfs:subClassOf  openapi:Collection
] .

<service_document>  a               openapi:Document ;
        openapi:info                <service_info> ;
        openapi:supportedOperation  [ a                    openapi:Operation ;
                                      openapi:description  "deletes a single pet based on the ID supplied" ;
                                      openapi:method       openapi:DELETE ;
                                      openapi:name         "deletePet" ;
                                      openapi:onPath       _:b0 ;
                                      openapi:parameter    [ a                    openapi:PathParameter ;
                                                             openapi:description  "ID of pet to delete" ;
                                                             openapi:explode      false ;
                                                             openapi:name         "id" ;
                                                             openapi:required     true ;
                                                             openapi:schema       [ a            sh:PropertyShape ;
                                                                                    sh:datatype  xsd:long
                                                                                  ] ;
                                                             openapi:style        openapi:simple
                                                           ] ;
                                      openapi:response     [ a                    openapi:DefaultResponse ;
                                                             openapi:content      [ a                      openapi:MediaType ;
                                                                                    openapi:mediaTypeName  "application/json" ;
                                                                                    openapi:schema         <ErrorNodeShape>
                                                                                  ] ;
                                                             openapi:description  "unexpected error"
                                                           ] ;
                                      openapi:response     [ a                    openapi:Response ;
                                                             openapi:description  "pet deleted" ;
                                                             openapi:statusCode   "204"
                                                           ] ;
                                      openapi:serverInfo   <service_server>
                                    ] ;
        openapi:supportedOperation  [ a                    openapi:Operation ;
                                      openapi:description  "Returns a user based on a single ID, if the user does not have access to the pet" ;
                                      openapi:method       openapi:GET ;
                                      openapi:name         "find pet by id" ;
                                      openapi:onPath       _:b0 ;
                                      openapi:parameter    [ a                    openapi:PathParameter ;
                                                             openapi:description  "ID of pet to fetch" ;
                                                             openapi:explode      false ;
                                                             openapi:name         "id" ;
                                                             openapi:required     true ;
                                                             openapi:schema       [ a            sh:PropertyShape ;
                                                                                    sh:datatype  xsd:long
                                                                                  ] ;
                                                             openapi:style        openapi:simple
                                                           ] ;
                                      openapi:response     [ a                    openapi:DefaultResponse ;
                                                             openapi:content      [ a                      openapi:MediaType ;
                                                                                    openapi:mediaTypeName  "application/json" ;
                                                                                    openapi:schema         <ErrorNodeShape>
                                                                                  ] ;
                                                             openapi:description  "unexpected error"
                                                           ] ;
                                      openapi:response     [ a                    openapi:Response ;
                                                             openapi:content      [ a                      openapi:MediaType ;
                                                                                    openapi:mediaTypeName  "application/json" ;
                                                                                    openapi:schema         <PetNodeShape>
                                                                                  ] ;
                                                             openapi:description  "pet response" ;
                                                             openapi:statusCode   "200"
                                                           ] ;
                                      openapi:response     [ a                    openapi:Response ;
                                                             openapi:content      [ a                      openapi:MediaType ;
                                                                                    openapi:mediaTypeName  "application/json" ;
                                                                                    openapi:schema         <ThirdPetNodeShape>
                                                                                  ] ;
                                                             openapi:description  "third pet" ;
                                                             openapi:statusCode   "201"
                                                           ] ;
                                      openapi:response     [ a                    openapi:Response ;
                                                             openapi:content      [ a                      openapi:MediaType ;
                                                                                    openapi:mediaTypeName  "application/json" ;
                                                                                    openapi:schema         <OtherPetNodeShape>
                                                                                  ] ;
                                                             openapi:description  "other pet" ;
                                                             openapi:statusCode   "202"
                                                           ] ;
                                      openapi:serverInfo   <service_server>
                                    ] ;
        openapi:supportedOperation  [ a                    openapi:Operation ;
                                      openapi:description  "Creates a new pet in the store. Duplicates are allowed" ;
                                      openapi:method       openapi:POST ;
                                      openapi:name         "addPet" ;
                                      openapi:onPath       _:b1 ;
                                      openapi:requestBody  [ a                    openapi:Body ;
                                                             openapi:content      [ a                      openapi:MediaType ;
                                                                                    openapi:mediaTypeName  "application/json" ;
                                                                                    openapi:schema         <NewPetNodeShape>
                                                                                  ] ;
                                                             openapi:description  "Pet to add to the store" ;
                                                             openapi:required     true
                                                           ] ;
                                      openapi:response     [ a                    openapi:DefaultResponse ;
                                                             openapi:content      [ a                      openapi:MediaType ;
                                                                                    openapi:mediaTypeName  "application/json" ;
                                                                                    openapi:schema         <ErrorNodeShape>
                                                                                  ] ;
                                                             openapi:description  "unexpected error"
                                                           ] ;
                                      openapi:response     [ a                    openapi:Response ;
                                                             openapi:content      [ a                      openapi:MediaType ;
                                                                                    openapi:mediaTypeName  "application/json" ;
                                                                                    openapi:schema         <PetNodeShape>
                                                                                  ] ;
                                                             openapi:description  "pet response" ;
                                                             openapi:statusCode   "200"
                                                           ] ;
                                      openapi:serverInfo   <service_server>
                                    ] ;
        openapi:supportedOperation  [ a                    openapi:Operation ;
                                      openapi:description  "Returns all pets from the system that the user has access to\nNam sed condimentum est. Maecenas tempor sagittis sapien, nec rhoncus sem sagittis sit amet. Aenean at gravida augue, ac iaculis sem. Curabitur odio lorem, ornare eget elementum nec, cursus id lectus. Duis mi turpis, pulvinar ac eros ac, tincidunt varius justo. In hac habitasse platea dictumst. Integer at adipiscing ante, a sagittis ligula. Aenean pharetra tempor ante molestie imperdiet. Vivamus id aliquam diam. Cras quis velit non tortor eleifend sagittis. Praesent at enim pharetra urna volutpat venenatis eget eget mauris. In eleifend fermentum facilisis. Praesent enim enim, gravida ac sodales sed, placerat id erat. Suspendisse lacus dolor, consectetur non augue vel, vehicula interdum libero. Morbi euismod sagittis libero sed lacinia.\nSed tempus felis lobortis leo pulvinar rutrum. Nam mattis velit nisl, eu condimentum ligula luctus nec. Phasellus semper velit eget aliquet faucibus. In a mattis elit. Phasellus vel urna viverra, condimentum lorem id, rhoncus nibh. Ut pellentesque posuere elementum. Sed a varius odio. Morbi rhoncus ligula libero, vel eleifend nunc tristique vitae. Fusce et sem dui. Aenean nec scelerisque tortor. Fusce malesuada accumsan magna vel tempus. Quisque mollis felis eu dolor tristique, sit amet auctor felis gravida. Sed libero lorem, molestie sed nisl in, accumsan tempor nisi. Fusce sollicitudin massa ut lacinia mattis. Sed vel eleifend lorem. Pellentesque vitae felis pretium, pulvinar elit eu, euismod sapien.\n" ;
                                      openapi:method       openapi:GET ;
                                      openapi:name         "findPets" ;
                                      openapi:onPath       _:b1 ;
                                      openapi:parameter    [ a                    openapi:Query ;
                                                             openapi:description  "maximum number of results to return" ;
                                                             openapi:explode      true ;
                                                             openapi:name         "limit" ;
                                                             openapi:required     false ;
                                                             openapi:schema       [ a            sh:PropertyShape ;
                                                                                    sh:datatype  xsd:int
                                                                                  ] ;
                                                             openapi:style        openapi:form
                                                           ] ;
                                      openapi:parameter    [ a                    openapi:Query ;
                                                             openapi:description  "tags to filter by" ;
                                                             openapi:explode      true ;
                                                             openapi:name         "tags" ;
                                                             openapi:required     false ;
                                                             openapi:schema       [ a               sh:NodeShape ;
                                                                                    sh:targetClass  [] 
                                                                                  ] ;
                                                             openapi:style        openapi:form
                                                           ] ;
                                      openapi:response     [ a                    openapi:Response ;
                                                             openapi:content      [ a                      openapi:MediaType ;
                                                                                    openapi:mediaTypeName  "application/json" ;
                                                                                    openapi:schema         [ a               sh:NodeShape ;
                                                                                                             sh:targetClass  [] 
                                                                                                           ]
                                                                                  ] ;
                                                             openapi:description  "pet response" ;
                                                             openapi:statusCode   "200"
                                                           ] ;
                                      openapi:response     [ a                    openapi:DefaultResponse ;
                                                             openapi:content      [ a                      openapi:MediaType ;
                                                                                    openapi:mediaTypeName  "application/json" ;
                                                                                    openapi:schema         <ErrorNodeShape>
                                                                                  ] ;
                                                             openapi:description  "unexpected error"
                                                           ] ;
                                      openapi:serverInfo   <service_server>
                                    ] ;
        openapi:version             "1.0.0" .

sh:subject  a             rdf:Property ;
        rdfs:comment      "An expression producing the resources that shall be inferred as subjects."@en ;
        rdfs:domain       sh:TripleRule ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "subject"@en .

_:b0    a                 openapi:Path ;
        openapi:pathName  "/pets/{id}" .

openapi:Document  a   rdfs:Class ;
        rdfs:comment  "The root document object of the OpenAPI document"@en ;
        rdfs:label    "Document"@en .

sh:prefixes  a            rdf:Property ;
        rdfs:comment      "The prefixes that shall be applied before parsing the associated SPARQL query."@en ;
        rdfs:domain       sh:SPARQLExecutable ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "prefixes"@en ;
        rdfs:range        owl:Ontology .

sh:severity  a            rdf:Property ;
        rdfs:comment      "Defines the severity that validation results produced by a shape must have. Defaults to sh:Violation."@en ;
        rdfs:domain       sh:Shape ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "severity"@en ;
        rdfs:range        sh:Severity .

sh:qualifiedValueShape
        a                 rdf:Property ;
        rdfs:comment      "The shape that a specified number of values must conform to."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "qualified value shape"@en ;
        rdfs:range        sh:Shape .

openapi:variableDefaultValue
        a            rdf:Property ;
        rdfs:domain  openapi:ServerVariable ;
        rdfs:label   "variableDefaultValue"@en ;
        rdfs:range   xsd:string .

openapi:Style  a      rdfs:Class ;
        rdfs:comment  "Describes how the parameter value will be serialized"@en ;
        rdfs:label    "Style"@en .

sh:MaxLengthConstraintComponent-maxLength
        a                 sh:Parameter ;
        rdfs:isDefinedBy  sh: ;
        sh:datatype       xsd:integer ;
        sh:maxCount       1 ;
        sh:path           sh:maxLength .

sh:declare  a             rdf:Property ;
        rdfs:comment      "Links a resource with its namespace prefix declarations."@en ;
        rdfs:domain       owl:Ontology ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "declare"@en ;
        rdfs:range        sh:PrefixDeclaration .

sh:sourceConstraintComponent
        a                 rdf:Property ;
        rdfs:comment      "The constraint component that is the source of the result."@en ;
        rdfs:domain       sh:AbstractResult ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "source constraint component"@en ;
        rdfs:range        sh:ConstraintComponent .

sh:conforms  a            rdf:Property ;
        rdfs:comment      "True if the validation did not produce any validation results, and false otherwise."@en ;
        rdfs:domain       sh:ValidationReport ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "conforms"@en ;
        rdfs:range        xsd:boolean .

openapi:security  a   rdf:Property ;
        rdfs:comment  "An operation's security"@en ;
        rdfs:domain   openapi:Operation ;
        rdfs:label    "security"@en ;
        rdfs:range    openapi:SecurityRequirement .

sh:MaxCountConstraintComponent-maxCount
        a                 sh:Parameter ;
        rdfs:isDefinedBy  sh: ;
        sh:datatype       xsd:integer ;
        sh:maxCount       1 ;
        sh:path           sh:maxCount .

sh:QualifiedMaxCountConstraintComponent-qualifiedValueShapesDisjoint
        a                 sh:Parameter ;
        rdfs:isDefinedBy  sh: ;
        sh:datatype       xsd:boolean ;
        sh:optional       true ;
        sh:path           sh:qualifiedValueShapesDisjoint .

sh:minExclusive  a        rdf:Property ;
        rdfs:comment      "Specifies the minimum exclusive value of each value node."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "min exclusive"@en .

sh:DatatypeConstraintComponent-datatype
        a                 sh:Parameter ;
        rdfs:isDefinedBy  sh: ;
        sh:maxCount       1 ;
        sh:nodeKind       sh:IRI ;
        sh:path           sh:datatype .

sh:ask  a                 rdf:Property ;
        rdfs:comment      "The SPARQL ASK query to execute."@en ;
        rdfs:domain       sh:SPARQLAskExecutable ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "ask"@en ;
        rdfs:range        xsd:string .

openapi:statusCode  a  rdf:Property ;
        rdfs:domain  openapi:Response ;
        rdfs:label   "statusCode"@en ;
        rdfs:range   xsd:string .

openapi:Discriminator
        a             rdfs:Class ;
        rdfs:comment  "The discriminator is a specific object in a schema which is used to inform the consumer of the specification of an alternative schema based on the value associated with it."@en ;
        rdfs:label    "Discriminator"@en .

openapi:Header  a     rdfs:Class ;
        rdfs:comment  "Custom headers that are expected as part of the HTTP request/response"@en ;
        rdfs:label    "Header"@en .

sh:property  a            rdf:Property ;
        rdfs:comment      "Links a shape to its property shapes."@en ;
        rdfs:domain       sh:Shape ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "property"@en ;
        rdfs:range        sh:PropertyShape .

sh:annotationValue  a     rdf:Property ;
        rdfs:comment      "The (default) values of the annotation property."@en ;
        rdfs:domain       sh:ResultAnnotation ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "annotation value"@en .

sh:labelTemplate  a       rdf:Property ;
        rdfs:comment      "Outlines how human-readable labels of instances of the associated Parameterizable shall be produced. The values can contain {?paramName} as placeholders for the actual values of the given parameter."@en ;
        rdfs:domain       sh:Parameterizable ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "label template"@en .

openapi:HEAD  a  openapi:Method .

openapi:serviceTitle  a  rdf:Property ;
        rdfs:comment  "The title of the application"@en ;
        rdfs:domain   openapi:Info ;
        rdfs:label    "serviceTitle"@en ;
        rdfs:range    xsd:string .

openapi:label  a  openapi:Style .

openapi:MediaType  a  rdfs:Class ;
        rdfs:comment  "A Media Type Object provides schema for the identified media type"@en ;
        rdfs:label    "MediaType"@en .

sh:JSConstraint-js  a     sh:Parameter ;
        rdfs:isDefinedBy  sh: ;
        sh:path           sh:js .

openapi:OpenIdConnect
        a                rdfs:Class ;
        rdfs:comment     " OpenID Connect Discovery security scheme"@en ;
        rdfs:label       "OpenIdConnect"@en ;
        rdfs:subClassOf  openapi:Security .

sh:shapesGraphWellFormed
        a                 rdf:Property ;
        rdfs:comment      "If true then the validation engine was certain that the shapes graph has passed all SHACL syntax requirements during the validation process."@en ;
        rdfs:domain       sh:ValidationReport ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "shapes graph well-formed"@en ;
        rdfs:range        xsd:boolean .

sh:resultPath  a          rdf:Property ;
        rdfs:comment      "The path of a validation result, based on the path of the validated property shape."@en ;
        rdfs:domain       sh:AbstractResult ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "result path"@en ;
        rdfs:range        rdfs:Resource .

sh:ConstraintComponent
        a                 rdfs:Class ;
        rdfs:comment      "The class of constraint components."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Constraint component"@en ;
        rdfs:subClassOf   sh:Parameterizable .

sh:condition  a           rdf:Property ;
        rdfs:comment      "The shapes that the focus nodes need to conform to before a rule is executed on them."@en ;
        rdfs:domain       sh:Rule ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "condition"@en ;
        rdfs:range        sh:Shape .

sh:qualifiedMaxCount  a   rdf:Property ;
        rdfs:comment      "The maximum number of value nodes that can conform to the shape."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "qualified max count"@en ;
        rdfs:range        xsd:integer .

openapi:method  a     rdf:Property ;
        rdfs:comment  "The HTTP method that operation supports"@en ;
        rdfs:domain   openapi:Operation ;
        rdfs:label    "method"@en ;
        rdfs:range    openapi:Method .

openapi:ServerVariable
        a             rdfs:Class ;
        rdfs:comment  "An object representing a Server Variable for server URL template substitution"@en ;
        rdfs:label    "ServerVariable"@en .

sh:MaxInclusiveConstraintComponent
        a                 sh:ConstraintComponent ;
        rdfs:comment      "A constraint component that can be used to restrict the range of value nodes with a maximum inclusive value."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Max-inclusive constraint component"@en ;
        sh:parameter      sh:MaxInclusiveConstraintComponent-maxInclusive .

openapi:Info  a       rdfs:Class ;
        rdfs:comment  "Provides metadata about the API"@en ;
        rdfs:label    "Info"@en .

sh:MaxInclusiveConstraintComponent-maxInclusive
        a                 sh:Parameter ;
        rdfs:isDefinedBy  sh: ;
        sh:maxCount       1 ;
        sh:nodeKind       sh:Literal ;
        sh:path           sh:maxInclusive .

sh:NotConstraintComponent
        a                 sh:ConstraintComponent ;
        rdfs:comment      "A constraint component that can be used to verify that value nodes do not conform to a given shape."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Not constraint component"@en ;
        sh:parameter      sh:NotConstraintComponent-not .

openapi:schema  a     rdf:Property ;
        rdfs:comment  "The schema defining the content of the request, response, or parameter"@en ;
        rdfs:label    "schema"@en ;
        rdfs:range    sh:Shape .

sh:XoneConstraintComponent-xone
        a                 sh:Parameter ;
        rdfs:isDefinedBy  sh: ;
        sh:path           sh:xone .

<Pet_idPropertyShape>
        a             sh:PropertyShape ;
        rdfs:label    "Pet_idPropertyShape" ;
        openapi:name  "id" ;
        sh:datatype   xsd:long ;
        sh:path       <Pet_id> .

<Pet>   a                owl:Class ;
        rdfs:subClassOf  <NewPet> .

sh:PatternConstraintComponent
        a                 sh:ConstraintComponent ;
        rdfs:comment      "A constraint component that can be used to verify that every value node matches a given regular expression."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Pattern constraint component"@en ;
        sh:parameter      sh:PatternConstraintComponent-flags , sh:PatternConstraintComponent-pattern .

sh:targetObjectsOf  a     rdf:Property ;
        rdfs:comment      "Links a shape to a property, indicating that all all objects of triples that have the given property as their predicate must conform to the shape."@en ;
        rdfs:domain       sh:Shape ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "target objects of"@en ;
        rdfs:range        rdf:Property .

openapi:PropertyMapper
        a             rdfs:Class ;
        rdfs:comment  "Configuration details for a Discriminator object"@en ;
        rdfs:label    "PropertyMapper"@en .

sh:LessThanConstraintComponent-lessThan
        a                 sh:Parameter ;
        rdfs:isDefinedBy  sh: ;
        sh:nodeKind       sh:IRI ;
        sh:path           sh:lessThan .

sh:hasValue  a            rdf:Property ;
        rdfs:comment      "Specifies a value that must be among the value nodes."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "has value"@en .

openapi:Contact  a    rdfs:Class ;
        rdfs:comment  "The contact information for the exposed API"@en ;
        rdfs:label    "Contact"@en .

sh:IRI  a                 sh:NodeKind ;
        rdfs:comment      "The node kind of all IRIs."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "IRI"@en .

sh:object  a              rdf:Property ;
        rdfs:comment      "An expression producing the nodes that shall be inferred as objects."@en ;
        rdfs:domain       sh:TripleRule ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "object"@en .

sh:flags  a               rdf:Property ;
        rdfs:comment      "An optional flag to be used with regular expression pattern matching."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "flags"@en ;
        rdfs:range        xsd:string .

openapi:PathParameter
        a                rdfs:Class ;
        rdfs:comment     "A parameter value that is part of the operation's URL"@en ;
        rdfs:label       "PathParameter"@en ;
        rdfs:subClassOf  openapi:Parameter .

openapi:Tag  a        rdfs:Class ;
        rdfs:comment  "A Tag can be used for logical grouping of operations by resources or any other qualifier"@en ;
        rdfs:label    "Tag"@en .

sh:SPARQLConstraintComponent-sparql
        a                 sh:Parameter ;
        rdfs:isDefinedBy  sh: ;
        sh:path           sh:sparql .

sh:PropertyShape  a       rdfs:Class ;
        rdfs:comment      "A property shape is a shape that specifies constraints on the values of a focus node for a given property or path."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Property shape"@en ;
        rdfs:subClassOf   sh:Shape .

openapi:ClientCredentials
        a                rdfs:Class ;
        rdfs:comment     "Configuration for the OAuth Client Credentials flow"@en ;
        rdfs:label       "ClientCredentials"@en ;
        rdfs:subClassOf  openapi:OAuthFlow .

sh:entailment  a          rdf:Property ;
        rdfs:comment      "An entailment regime that indicates what kind of inferencing is required by a shapes graph."@en ;
        rdfs:domain       owl:Ontology ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "entailment"@en ;
        rdfs:range        rdfs:Resource .

sh:AndConstraintComponent-and
        a                 sh:Parameter ;
        rdfs:isDefinedBy  sh: ;
        sh:path           sh:and .

<TheCategory>  a  rdf:Property .

sh:validator  a           rdf:Property ;
        rdfs:comment      "The validator(s) used to evaluate constraints of either node or property shapes."@en ;
        rdfs:domain       sh:ConstraintComponent ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "validator"@en ;
        rdfs:range        sh:Validator .

sh:QualifiedMinCountConstraintComponent-qualifiedValueShapesDisjoint
        a                 sh:Parameter ;
        rdfs:isDefinedBy  sh: ;
        sh:datatype       xsd:boolean ;
        sh:optional       true ;
        sh:path           sh:qualifiedValueShapesDisjoint .

sh:JSLibrary  a           rdfs:Class ;
        rdfs:comment      "Represents a JavaScript library, typically identified by one or more URLs of files to include."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "JavaScript library"@en ;
        rdfs:subClassOf   rdfs:Resource .

sh:SPARQLUpdateExecutable
        a                 rdfs:Class ;
        rdfs:comment      "The class of SPARQL executables based on a SPARQL UPDATE."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "SPARQL UPDATE executable"@en ;
        rdfs:subClassOf   sh:SPARQLExecutable .

openapi:namespace  a  rdf:Property ;
        rdfs:comment  "The URI of the namespace definition. Value MUST be in the form of an absolute URI."@en ;
        rdfs:domain   openapi:XML ;
        rdfs:label    "namespace"@en ;
        rdfs:range    xsd:anyURI .

openapi:mapKey  a    rdf:Property ;
        rdfs:domain  openapi:PropertyMapper ;
        rdfs:label   "mapKey"@en ;
        rdfs:range   xsd:string .

<Error_codePropertyShape>
        a             sh:PropertyShape ;
        rdfs:label    "Error_codePropertyShape" ;
        openapi:name  "code" ;
        sh:datatype   xsd:int ;
        sh:path       <Error_code> .

sh:annotationVarName  a   rdf:Property ;
        rdfs:comment      "The name of the SPARQL variable from the SELECT clause that shall be used for the values."@en ;
        rdfs:domain       sh:ResultAnnotation ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "annotation variable name"@en ;
        rdfs:range        xsd:string .

sh:Warning  a             sh:Severity ;
        rdfs:comment      "The severity for a warning validation result."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Warning"@en .

sh:LessThanConstraintComponent
        a                 sh:ConstraintComponent ;
        rdfs:comment      "A constraint component that can be used to verify that each value node is smaller than all the nodes that have the focus node as subject and the value of a given property as predicate."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Less-than constraint component"@en ;
        sh:parameter      sh:LessThanConstraintComponent-lessThan .

sh:ignoredProperties  a   rdf:Property ;
        rdfs:comment      "An optional RDF list of properties that are also permitted in addition to those explicitly enumerated via sh:property/sh:path."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "ignored properties"@en ;
        rdfs:range        rdf:List .

openapi:Body  a       rdfs:Class ;
        rdfs:comment  "The request body applicable for this operation"@en ;
        rdfs:label    "Body"@en .

openapi:externalDoc  a  rdf:Property ;
        rdfs:comment  "References an external resource for extended documentation"@en ;
        rdfs:label    "externalDoc"@en ;
        rdfs:range    openapi:ExternalDoc .

openapi:Http  a          rdfs:Class ;
        rdfs:comment     "HTTP authentication security scheme"@en ;
        rdfs:label       "Http"@en ;
        rdfs:subClassOf  openapi:Security .

sh:pattern  a             rdf:Property ;
        rdfs:comment      "Specifies a regular expression pattern that the string representations of the value nodes must match."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "pattern"@en ;
        rdfs:range        xsd:string .

sh:PatternConstraintComponent-pattern
        a                 sh:Parameter ;
        rdfs:isDefinedBy  sh: ;
        sh:datatype       xsd:string ;
        sh:path           sh:pattern .

<OtherPet_speedPropertyShape>
        a             sh:PropertyShape ;
        rdfs:label    "OtherPet_speedPropertyShape" ;
        openapi:name  "speed" ;
        sh:path       <OtherPet_speed> ;
        sh:xone       ( <SpecifiedPropertyShape>
                        [ a            sh:PropertyShape ;
                          sh:datatype  xsd:string
                        ]
                        [ a            sh:PropertyShape ;
                          sh:datatype  xsd:long
                        ]
                      ) .

openapi:1xxResponse  a   rdfs:Class ;
        rdfs:comment     "Represents all response codes between [100-199]"@en ;
        rdfs:label       "1xxResponse"@en ;
        rdfs:subClassOf  openapi:Response .

openapi:name  a     rdf:Property ;
        rdfs:label  "name"@en ;
        rdfs:range  xsd:string .

sh:maxExclusive  a        rdf:Property ;
        rdfs:comment      "Specifies the maximum exclusive value of each value node."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "max exclusive"@en .

openapi:propertyName  a  rdf:Property ;
        rdfs:domain  openapi:Encoding ;
        rdfs:label   "propertyName"@en ;
        rdfs:range   xsd:string .

sh:NotConstraintComponent-not
        a                 sh:Parameter ;
        rdfs:isDefinedBy  sh: ;
        sh:path           sh:not .

openapi:allowExtraProperties
        a           rdf:Property ;
        rdfs:label  "allowExtraProperties"@en ;
        rdfs:range  xsd:boolean .

<SpecifiedPropertyShape>
        a            sh:PropertyShape ;
        rdfs:label   "SpecifiedPropertyShape" ;
        sh:datatype  xsd:int ;
        sh:path      <Specified> .

[ a                owl:Class ;
  rdfs:subClassOf  openapi:Collection
] .

sh:XoneConstraintComponent
        a                 sh:ConstraintComponent ;
        rdfs:comment      "A constraint component that can be used to restrict the value nodes so that they conform to exactly one out of several provided shapes."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Exactly one constraint component"@en ;
        sh:parameter      sh:XoneConstraintComponent-xone .

sh:closed  a              rdf:Property ;
        rdfs:comment      "If set to true then the shape is closed."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "closed"@en ;
        rdfs:range        xsd:boolean .

sh:ExpressionConstraintComponent
        a                 sh:ConstraintComponent ;
        rdfs:comment      "A constraint component that can be used to verify that a given node expression produces true for all value nodes."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Expression constraint component"@en ;
        sh:parameter      sh:ExpressionConstraintComponent-expression .

sh:SPARQLAskExecutable
        a                 rdfs:Class ;
        rdfs:comment      "The class of SPARQL executables that are based on an ASK query."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "SPARQL ASK executable"@en ;
        rdfs:subClassOf   sh:SPARQLExecutable .

sh:parameter  a           rdf:Property ;
        rdfs:comment      "The parameters of a function or constraint component."@en ;
        rdfs:domain       sh:Parameterizable ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "parameter"@en ;
        rdfs:range        sh:Parameter .

sh:ClosedConstraintComponent
        a                 sh:ConstraintComponent ;
        rdfs:comment      "A constraint component that can be used to indicate that focus nodes must only have values for those properties that have been explicitly enumerated via sh:property/sh:path."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Closed constraint component"@en ;
        sh:parameter      sh:ClosedConstraintComponent-ignoredProperties , sh:ClosedConstraintComponent-closed .

openapi:XML  a        rdfs:Class ;
        rdfs:comment  "A metadata object that allows for more fine-tuned XML model definitions."@en ;
        rdfs:label    "XML"@en .

openapi:form  a  openapi:Style .

sh:PropertyConstraintComponent-property
        a                 sh:Parameter ;
        rdfs:isDefinedBy  sh: ;
        sh:path           sh:property .

openapi:required  a  rdf:Property ;
        rdfs:label  "required"@en ;
        rdfs:range  xsd:boolean .

<NewPet>  a     owl:Class .

sh:ClassConstraintComponent-class
        a                 sh:Parameter ;
        rdfs:isDefinedBy  sh: ;
        sh:nodeKind       sh:IRI ;
        sh:path           sh:class .

<PetNodeShape>  a       sh:NodeShape ;
        rdfs:label      "PetNodeShape" ;
        sh:and          ( [ a            sh:NodeShape ;
                            sh:property  <Pet_idPropertyShape>
                          ]
                          <NewPetNodeShape>
                        ) ;
        sh:targetClass  <Pet> .

openapi:OAuthFlow  a  rdfs:Class ;
        rdfs:comment  "Configuration details for an OAuth Flow"@en ;
        rdfs:label    "OAuthFlow"@en .

openapi:Password  a      rdfs:Class ;
        rdfs:comment     "Configuration for the OAuth Resource Owner Password flow"@en ;
        rdfs:label       "Password"@en ;
        rdfs:subClassOf  openapi:OAuthFlow .

openapi:Query  a         rdfs:Class ;
        rdfs:comment     "A Parameter that is appended to the URL"@en ;
        rdfs:label       "QueryParameter"@en ;
        rdfs:subClassOf  openapi:Parameter .

sh:MaxExclusiveConstraintComponent
        a                 sh:ConstraintComponent ;
        rdfs:comment      "A constraint component that can be used to restrict the range of value nodes with a maximum exclusive value."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Max-exclusive constraint component"@en ;
        sh:parameter      sh:MaxExclusiveConstraintComponent-maxExclusive .

openapi:OPTIONS  a  openapi:Method .

sh:SPARQLSelectExecutable
        a                 rdfs:Class ;
        rdfs:comment      "The class of SPARQL executables based on a SELECT query."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "SPARQL SELECT executable"@en ;
        rdfs:subClassOf   sh:SPARQLExecutable .

openapi:deprecated  a  rdf:Property ;
        rdfs:comment  "Specifies that a schema, operation or parameter is deprecated and SHOULD be transitioned out of usage"@en ;
        rdfs:label    "deprecated"@en ;
        rdfs:range    xsd:boolean .

openapi:AuthorizationCode
        a                rdfs:Class ;
        rdfs:comment     "Configuration for the OAuth Authorization Code flow"@en ;
        rdfs:label       "AuthorizationCode"@en ;
        rdfs:subClassOf  openapi:OAuthFlow .

sh:js   a                 rdf:Property ;
        rdfs:comment      "Constraints expressed in JavaScript." ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "JavaScript constraint"@en ;
        rdfs:range        sh:JSConstraint .

sh:LanguageInConstraintComponent
        a                 sh:ConstraintComponent ;
        rdfs:comment      "A constraint component that can be used to enumerate language tags that all value nodes must have."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Language-in constraint component"@en ;
        sh:parameter      sh:LanguageInConstraintComponent-languageIn .

openapi:pipeDelimited
        a       openapi:Style .

sh:HasValueConstraintComponent
        a                 sh:ConstraintComponent ;
        rdfs:comment      "A constraint component that can be used to verify that one of the value nodes is a given RDF node."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Has-value constraint component"@en ;
        sh:parameter      sh:HasValueConstraintComponent-hasValue .

<NewPetNodeShape>  a    sh:NodeShape ;
        rdfs:label      "NewPetNodeShape" ;
        sh:property     <NewPet_tagPropertyShape> , <NewPet_namePropertyShape> ;
        sh:targetClass  <NewPet> .

openapi:Method  a     rdfs:Class ;
        rdfs:comment  "The HTTP method"@en ;
        rdfs:label    "Method"@en .

[ a            sh:PropertyShape ;
  sh:datatype  xsd:string ;
  sh:path      openapi:member
] .

<TheCategoryPropertyShape>
        a             sh:PropertyShape ;
        rdfs:label    "TheCategoryPropertyShape" ;
        openapi:name  "category" ;
        sh:datatype   xsd:long ;
        sh:path       <TheCategory> .

openapi:mapping  a    rdf:Property ;
        rdfs:comment  "An object to hold mappings between payload values and schema names or references."@en ;
        rdfs:domain   openapi:Discriminator ;
        rdfs:label    "mapping"@en ;
        rdfs:range    openapi:PropertyMapper .

sh:PatternConstraintComponent-flags
        a                 sh:Parameter ;
        rdfs:isDefinedBy  sh: ;
        sh:datatype       xsd:string ;
        sh:optional       true ;
        sh:path           sh:flags .

openapi:contentType  a  rdf:Property ;
        rdfs:comment  "The Content-Type for encoding a specific property"@en ;
        rdfs:domain   openapi:Encoding ;
        rdfs:label    "contentType"@en ;
        rdfs:range    xsd:string .

openapi:url  a      rdf:Property ;
        rdfs:label  "url"@en ;
        rdfs:range  xsd:anyURI .

sh:NodeShape  a           rdfs:Class ;
        rdfs:comment      "A node shape is a shape that specifies constraint that need to be met with respect to focus nodes."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Node shape"@en ;
        rdfs:subClassOf   sh:Shape .

openapi:TRACE  a  openapi:Method .

openapi:License  a    rdfs:Class ;
        rdfs:comment  "The license information for the exposed API"@en ;
        rdfs:label    "License"@en .

openapi:contact  a    rdf:Property ;
        rdfs:comment  "Contact information for the exposed API."@en ;
        rdfs:domain   openapi:Info ;
        rdfs:label    "contact"@en ;
        rdfs:range    openapi:Contact .

sh:sourceShape  a         rdf:Property ;
        rdfs:comment      "The shape that is was validated when the result was produced."@en ;
        rdfs:domain       sh:AbstractResult ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "source shape"@en ;
        rdfs:range        sh:Shape .

sh:QualifiedMaxCountConstraintComponent-qualifiedValueShape
        a                 sh:Parameter ;
        rdfs:isDefinedBy  sh: ;
        sh:path           sh:qualifiedValueShape .

openapi:matrix  a  openapi:Style .

sh:defaultValue  a        rdf:Property ;
        rdfs:comment      "A default value for a property, for example for user interface tools to pre-populate input fields."@en ;
        rdfs:domain       sh:PropertyShape ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "default value"@en .

sh:nodes  a               rdf:Property ;
        rdfs:comment      "The node expression producing the input nodes of a filter shape expression."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "nodes"@en .

sh:zeroOrMorePath  a      rdf:Property ;
        rdfs:comment      "The (single) value of this property represents a path that is matched zero or more times."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "zero or more path"@en ;
        rdfs:range        rdfs:Resource .

openapi:nullable  a   rdf:Property ;
        rdfs:comment  "Allows sending a null value for the defined schema."@en ;
        rdfs:label    "nullable"@en ;
        rdfs:range    xsd:boolean .

sh:JSTarget  a            rdfs:Class ;
        rdfs:comment      "The class of targets that are based on JavaScript functions."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "JavaScript target"@en ;
        rdfs:subClassOf   sh:JSExecutable , sh:Target .

sh:update  a              rdf:Property ;
        rdfs:comment      "The SPARQL UPDATE to execute."@en ;
        rdfs:domain       sh:SPARQLUpdateExecutable ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "update"@en ;
        rdfs:range        xsd:string .

openapi:Parameter  a  rdfs:Class ;
        rdfs:comment  "Describes a single operation parameter"@en ;
        rdfs:label    "Parameter"@en .

openapi:allowReserved
        a             rdf:Property ;
        rdfs:comment  "Determines whether the parameter value SHOULD allow reserved characters"@en ;
        rdfs:label    "allowReserved"@en ;
        rdfs:range    xsd:boolean .

openapi:5xxResponse  a   rdfs:Class ;
        rdfs:comment     "Represents all response codes between [500-599]"@en ;
        rdfs:label       "5xxResponse"@en ;
        rdfs:subClassOf  openapi:Response .

openapi:flow  a       rdf:Property ;
        rdfs:comment  "An object to hold mappings between payload values and schema names or references."@en ;
        rdfs:domain   openapi:OAuth2 ;
        rdfs:label    "flow"@en ;
        rdfs:range    openapi:OAuthFlow .

sh:path  a                rdf:Property ;
        rdfs:comment      "Specifies the property path of a property shape."@en ;
        rdfs:domain       sh:PropertyShape ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "path"@en ;
        rdfs:range        rdfs:Resource .

sh:this  a                rdfs:Resource ;
        rdfs:comment      "A node expression that represents the current focus node."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "this"@en .

openapi:Path  a       rdfs:Class ;
        rdfs:comment  "Holds the relative paths to the individual endpoints and their operations"@en ;
        rdfs:label    "Path"@en .

openapi:encodingHeader
        a             rdf:Property ;
        rdfs:comment  "A map allowing additional information to be provided as headers"@en ;
        rdfs:domain   openapi:Encoding ;
        rdfs:label    "encodingHeader"@en ;
        rdfs:range    openapi:Header .

sh:target  a              rdf:Property ;
        rdfs:comment      "Links a shape to a target specified by an extension language, for example instances of sh:SPARQLTarget."@en ;
        rdfs:domain       sh:Shape ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "target"@en ;
        rdfs:range        sh:Target .

openapi:bearerFormat  a  rdf:Property ;
        rdfs:comment  "A hint to the client to identify how the bearer token is formatted"@en ;
        rdfs:domain   openapi:Http ;
        rdfs:label    "bearerFormat"@en ;
        rdfs:range    xsd:string .

sh:qualifiedMinCount  a   rdf:Property ;
        rdfs:comment      "The minimum number of value nodes that must conform to the shape."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "qualified min count"@en ;
        rdfs:range        xsd:integer .

sh:JSConstraintComponent
        a                 sh:ConstraintComponent ;
        rdfs:comment      "A constraint component with the parameter sh:js linking to a sh:JSConstraint containing a sh:script."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "JavaScript constraint component"@en ;
        sh:parameter      sh:JSConstraint-js .

sh:UniqueLangConstraintComponent
        a                 sh:ConstraintComponent ;
        rdfs:comment      "A constraint component that can be used to specify that no pair of value nodes may use the same language tag."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Unique-languages constraint component"@en ;
        sh:parameter      sh:UniqueLangConstraintComponent-uniqueLang .

sh:UniqueLangConstraintComponent-uniqueLang
        a                 sh:Parameter ;
        rdfs:isDefinedBy  sh: ;
        sh:datatype       xsd:boolean ;
        sh:maxCount       1 ;
        sh:path           sh:uniqueLang .

openapi:Encoding  a   rdfs:Class ;
        rdfs:comment  "A single encoding definition applied to a single schema property"@en ;
        rdfs:label    "Encoding"@en .

sh:NodeKind  a            rdfs:Class ;
        rdfs:comment      "The class of all node kinds, including sh:BlankNode, sh:IRI, sh:Literal or the combinations of these: sh:BlankNodeOrIRI, sh:BlankNodeOrLiteral, sh:IRIOrLiteral."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Node kind"@en ;
        rdfs:subClassOf   rdfs:Resource .

sh:NodeConstraintComponent
        a                 sh:ConstraintComponent ;
        rdfs:comment      "A constraint component that can be used to verify that all value nodes conform to the given node shape."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Node constraint component"@en ;
        sh:parameter      sh:NodeConstraintComponent-node .

sh:maxLength  a           rdf:Property ;
        rdfs:comment      "Specifies the maximum string length of each value node."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "max length"@en ;
        rdfs:range        xsd:integer .

sh:maxCount  a            rdf:Property ;
        rdfs:comment      "Specifies the maximum number of values in the set of value nodes."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "max count"@en ;
        rdfs:range        xsd:integer .

sh:BlankNodeOrLiteral
        a                 sh:NodeKind ;
        rdfs:comment      "The node kind of all blank nodes or literals."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Blank node or literal"@en .

openapi:in  a         rdf:Property ;
        rdfs:comment  "The location of the API key"@en ;
        rdfs:domain   openapi:ApiKey ;
        rdfs:label    "in"@en ;
        rdfs:range    xsd:string .

openapi:Implicit  a      rdfs:Class ;
        rdfs:comment     "Configuration for the OAuth Implicit flow"@en ;
        rdfs:label       "Implicit"@en ;
        rdfs:subClassOf  openapi:OAuthFlow .

openapi:3xxResponse  a   rdfs:Class ;
        rdfs:comment     "Represents all response codes between [300-399]"@en ;
        rdfs:label       "3xxResponse"@en ;
        rdfs:subClassOf  openapi:Response .

openapi:PUT  a  openapi:Method .

sh:DisjointConstraintComponent
        a                 sh:ConstraintComponent ;
        rdfs:comment      "A constraint component that can be used to verify that the set of value nodes is disjoint with the the set of nodes that have the focus node as subject and the value of a given property as predicate."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Disjoint constraint component"@en ;
        sh:parameter      sh:DisjointConstraintComponent-disjoint .

openapi:requestBody  a  rdf:Property ;
        rdfs:comment  "An operation's request body"@en ;
        rdfs:domain   openapi:Operation ;
        rdfs:label    "requestBody"@en ;
        rdfs:range    openapi:Body .

sh:or   a                 rdf:Property ;
        rdfs:comment      "Specifies a list of shapes so that the value nodes must conform to at least one of the shapes."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "or"@en ;
        rdfs:range        rdf:List .

openapi:securityType  a  rdf:Property ;
        rdfs:domain  openapi:SecurityRequirement ;
        rdfs:label   "securityType"@en ;
        rdfs:range   openapi:Security .

sh:PropertyGroup  a       rdfs:Class ;
        rdfs:comment      "Instances of this class represent groups of property shapes that belong together."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Property group"@en ;
        rdfs:subClassOf   rdfs:Resource .

sh:Info  a                sh:Severity ;
        rdfs:comment      "The severity for an informational validation result."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Info"@en .

sh:SPARQLExecutable  a    rdfs:Class ;
        rdfs:comment      "The class of resources that encapsulate a SPARQL query."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "SPARQL executable"@en ;
        rdfs:subClassOf   rdfs:Resource .

sh:JSConstraint  a        rdfs:Class ;
        rdfs:comment      "The class of constraints backed by a JavaScript function."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "JavaScript-based constraint"@en ;
        rdfs:subClassOf   sh:JSExecutable .

sh:xone  a                rdf:Property ;
        rdfs:comment      "Specifies a list of shapes so that the value nodes must conform to exactly one of the shapes."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "exactly one"@en ;
        rdfs:range        rdf:List .

openapi:authorizationUrl
        a             rdf:Property ;
        rdfs:comment  "The authorization URL to be used for this flow"@en ;
        rdfs:domain   openapi:OAuthFlow ;
        rdfs:label    "authorizationUrl"@en ;
        rdfs:range    xsd:anyURI .

openapi:allowEmptyValue
        a             rdf:Property ;
        rdfs:comment  "Sets the ability to pass empty-valued parameters"@en ;
        rdfs:domain   openapi:Query ;
        rdfs:label    "allowEmptyValue"@en ;
        rdfs:range    xsd:boolean .

sh:oneOrMorePath  a       rdf:Property ;
        rdfs:comment      "The (single) value of this property represents a path that is matched one or more times."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "one or more path"@en ;
        rdfs:range        rdfs:Resource .

sh:QualifiedMinCountConstraintComponent
        a                 sh:ConstraintComponent ;
        rdfs:comment      "A constraint component that can be used to verify that a specified minimum number of value nodes conforms to a given shape."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Qualified-min-count constraint component"@en ;
        sh:parameter      sh:QualifiedMinCountConstraintComponent-qualifiedValueShapesDisjoint , sh:QualifiedMinCountConstraintComponent-qualifiedValueShape , sh:QualifiedMinCountConstraintComponent-qualifiedMinCount .

sh:OrConstraintComponent-or
        a                 sh:Parameter ;
        rdfs:isDefinedBy  sh: ;
        sh:path           sh:or .

sh:QualifiedMinCountConstraintComponent-qualifiedValueShape
        a                 sh:Parameter ;
        rdfs:isDefinedBy  sh: ;
        sh:path           sh:qualifiedValueShape .

openapi:contactName  a  rdf:Property ;
        rdfs:comment  "The identifying name of the contact person/organization"@en ;
        rdfs:domain   openapi:Contact ;
        rdfs:label    "contactName"@en ;
        rdfs:range    xsd:string .

<OtherPetNodeShape>  a  sh:NodeShape ;
        rdfs:label      "OtherPetNodeShape" ;
        sh:property     <OtherPet_speedPropertyShape> ;
        sh:targetClass  <OtherPet> .

sh:and  a                 rdf:Property ;
        rdfs:comment      "RDF list of shapes to validate the value nodes against."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "and"@en ;
        rdfs:range        rdf:List .

sh:LessThanOrEqualsConstraintComponent-lessThanOrEquals
        a                 sh:Parameter ;
        rdfs:isDefinedBy  sh: ;
        sh:nodeKind       sh:IRI ;
        sh:path           sh:lessThanOrEquals .

openapi:PATCH  a  openapi:Method .

openapi:variableValue
        a            rdf:Property ;
        rdfs:domain  openapi:ServerVariable ;
        rdfs:label   "variableValue"@en ;
        rdfs:range   xsd:string .

[ a        sh:PropertyShape ;
  sh:path  openapi:member
] .

openapi:multipleOf  a  rdf:Property ;
        rdfs:domain  sh:Shape ;
        rdfs:label   "multipleOf"@en .

openapi:POST  a  openapi:Method .

sh:resultSeverity  a      rdf:Property ;
        rdfs:comment      "The severity of the result, e.g. warning."@en ;
        rdfs:domain       sh:AbstractResult ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "result severity"@en ;
        rdfs:range        sh:Severity .

openapi:simple  a  openapi:Style .

sh:order  a               rdf:Property ;
        rdfs:comment      "Specifies the relative order of this compared to its siblings. For example use 0 for the first, 1 for the second."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "order"@en .

sh:PropertyConstraintComponent
        a                 sh:ConstraintComponent ;
        rdfs:comment      "A constraint component that can be used to verify that all value nodes conform to the given property shape."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Property constraint component"@en ;
        sh:parameter      sh:PropertyConstraintComponent-property .

sh:MinLengthConstraintComponent
        a                 sh:ConstraintComponent ;
        rdfs:comment      "A constraint component that can be used to restrict the minimum string length of value nodes."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Min-length constraint component"@en ;
        sh:parameter      sh:MinLengthConstraintComponent-minLength .

sh:TargetType  a          rdfs:Class ;
        rdfs:comment      "The (meta) class for parameterizable targets.\tInstances of this are instantiated as values of the sh:target property."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Target type"@en ;
        rdfs:subClassOf   sh:Parameterizable , rdfs:Class .

sh:inversePath  a         rdf:Property ;
        rdfs:comment      "The (single) value of this property represents an inverse path (object to subject)."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "inverse path"@en ;
        rdfs:range        rdfs:Resource .

openapi:OAuth2  a        rdfs:Class ;
        rdfs:comment     "OAuth2's common flows security scheme"@en ;
        rdfs:label       "OAuth2"@en ;
        rdfs:subClassOf  openapi:Security .

sh:Shape  a               rdfs:Class ;
        rdfs:comment      "A shape is a collection of constraints that may be targeted for certain nodes."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Shape"@en ;
        rdfs:subClassOf   rdfs:Resource .

sh:JSFunction  a          rdfs:Class ;
        rdfs:comment      "The class of SHACL functions that execute a JavaScript function when called."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "JavaScript function"@en ;
        rdfs:subClassOf   sh:JSExecutable , sh:Function .

sh:TripleRule  a          rdfs:Class ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "A rule based on triple (subject, predicate, object) pattern."@en ;
        rdfs:subClassOf   sh:Rule .

sh:NodeKindConstraintComponent-nodeKind
        a                 sh:Parameter ;
        rdfs:isDefinedBy  sh: ;
        sh:in             ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral ) ;
        sh:maxCount       1 ;
        sh:path           sh:nodeKind .

openapi:licenseName  a  rdf:Property ;
        rdfs:comment  "The license name used for the API."@en ;
        rdfs:domain   openapi:License ;
        rdfs:label    "licenseName"@en ;
        rdfs:range    xsd:string .

sh:MinCountConstraintComponent-minCount
        a                 sh:Parameter ;
        rdfs:isDefinedBy  sh: ;
        sh:datatype       xsd:integer ;
        sh:maxCount       1 ;
        sh:path           sh:minCount .

<OtherPet>  a   owl:Class .

openapi:Server  a     rdfs:Class ;
        rdfs:comment  "Provides connectivity information to a target server"@en ;
        rdfs:label    "Server"@en .

sh:not  a                 rdf:Property ;
        rdfs:comment      "Specifies a shape that the value nodes must not conform to."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "not"@en ;
        rdfs:range        sh:Shape .

openapi:license  a    rdf:Property ;
        rdfs:comment  "License information for the exposed API"@en ;
        rdfs:domain   openapi:Info ;
        rdfs:label    "license"@en ;
        rdfs:range    openapi:License .

openapi:onPath  a     rdf:Property ;
        rdfs:comment  "Holds the relative paths to the individual endpoints and their operations"@en ;
        rdfs:domain   openapi:Operation ;
        rdfs:label    "onPath"@en ;
        rdfs:range    openapi:Path .

sh:lessThanOrEquals  a    rdf:Property ;
        rdfs:comment      "Specifies a property that must have smaller or equal values than the value nodes."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "less than or equals"@en ;
        rdfs:range        rdf:Property .

<ErrorNodeShape>  a     sh:NodeShape ;
        rdfs:label      "ErrorNodeShape" ;
        sh:property     <Error_messagePropertyShape> , <Error_codePropertyShape> ;
        sh:targetClass  <Error> .

openapi:explode  a  rdf:Property ;
        rdfs:label  "explode"@en ;
        rdfs:range  xsd:boolean .

sh:zeroOrOnePath  a       rdf:Property ;
        rdfs:comment      "The (single) value of this property represents a path that is matched zero or one times."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "zero or one path"@en ;
        rdfs:range        rdfs:Resource .

openapi:info  a       rdf:Property ;
        rdfs:comment  "Metadata info about the API"@en ;
        rdfs:domain   openapi:Document ;
        rdfs:label    "info"@en ;
        rdfs:range    openapi:Info .

<Pet_id>  a     rdf:Property .

openapi:Response  a   rdfs:Class ;
        rdfs:comment  "Describes a single response from an API Operation"@en ;
        rdfs:label    "Response"@en .

sh:filterShape  a         rdf:Property ;
        rdfs:comment      "The shape that all input nodes of the expression need to conform to."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "filter shape"@en ;
        rdfs:range        sh:Shape .

sh:name  a                rdf:Property ;
        rdfs:comment      "Human-readable labels for the property in the context of the surrounding shape."@en ;
        rdfs:domain       sh:PropertyShape ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "name"@en .

sh:EqualsConstraintComponent-equals
        a                 sh:Parameter ;
        rdfs:isDefinedBy  sh: ;
        sh:nodeKind       sh:IRI ;
        sh:path           sh:equals .

openapi:serverInfo  a  rdf:Property ;
        rdfs:comment  "An operation's server"@en ;
        rdfs:domain   openapi:Operation ;
        rdfs:label    "serverInfo"@en ;
        rdfs:range    openapi:Server .

openapi:tag  a        rdf:Property ;
        rdfs:comment  "An operation's tag"@en ;
        rdfs:domain   openapi:Operation ;
        rdfs:label    "tag"@en ;
        rdfs:range    openapi:Tag .

sh:JSTargetType  a        rdfs:Class ;
        rdfs:comment      "The (meta) class for parameterizable targets that are based on JavaScript functions."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "JavaScript target type"@en ;
        rdfs:subClassOf   sh:JSExecutable , sh:TargetType .

sh:nodeKind  a            rdf:Property ;
        rdfs:comment      "Specifies the node kind (e.g. IRI or literal) each value node."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "node kind"@en ;
        rdfs:range        sh:NodeKind .

sh:SPARQLFunction  a      rdfs:Class ;
        rdfs:comment      "A function backed by a SPARQL query - either ASK or SELECT."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "SPARQL function"@en ;
        rdfs:subClassOf   sh:SPARQLSelectExecutable , sh:SPARQLAskExecutable , sh:Function .

<Error>  a      owl:Class .

openapi:requestBodyContent
        a             rdf:Property ;
        rdfs:comment  "The content of a the request"@en ;
        rdfs:domain   openapi:Body ;
        rdfs:label    "requestBodyContent"@en ;
        rdfs:range    openapi:RequestBodyMediaType .

<Error_code>  a  rdf:Property .

sh:LessThanOrEqualsConstraintComponent
        a                 sh:ConstraintComponent ;
        rdfs:comment      "A constraint component that can be used to verify that every value node is smaller than all the nodes that have the focus node as subject and the value of a given property as predicate."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "less-than-or-equals constraint component"@en ;
        sh:parameter      sh:LessThanOrEqualsConstraintComponent-lessThanOrEquals .

sh:Target  a              rdfs:Class ;
        rdfs:comment      "The base class of targets such as those based on SPARQL queries."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Target"@en ;
        rdfs:subClassOf   rdfs:Resource .

openapi:readOnly  a   rdf:Property ;
        rdfs:comment  "Declares the property as read only"@en ;
        rdfs:label    "readOnly"@en ;
        rdfs:range    xsd:boolean .

sh:QualifiedMaxCountConstraintComponent
        a                 sh:ConstraintComponent ;
        rdfs:comment      "A constraint component that can be used to verify that a specified maximum number of value nodes conforms to a given shape."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Qualified-max-count constraint component"@en ;
        sh:parameter      sh:QualifiedMaxCountConstraintComponent-qualifiedValueShapesDisjoint , sh:QualifiedMaxCountConstraintComponent-qualifiedValueShape , sh:QualifiedMaxCountConstraintComponent-qualifiedMaxCount .

<Specified>  a  rdf:Property .

sh:NodeKindConstraintComponent
        a                 sh:ConstraintComponent ;
        rdfs:comment      "A constraint component that can be used to restrict the RDF node kind of each value node."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Node-kind constraint component"@en ;
        sh:parameter      sh:NodeKindConstraintComponent-nodeKind .

sh:sparql  a              rdf:Property ;
        rdfs:comment      "Links a shape with SPARQL constraints."@en ;
        rdfs:domain       sh:Shape ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "constraint (in SPARQL)"@en ;
        rdfs:range        sh:SPARQLConstraint .

sh:minInclusive  a        rdf:Property ;
        rdfs:comment      "Specifies the minimum inclusive value of each value node."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "min inclusive"@en .

sh:optional  a            rdf:Property ;
        rdfs:comment      "Indicates whether a parameter is optional."@en ;
        rdfs:domain       sh:Parameter ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "optional"@en ;
        rdfs:range        xsd:boolean .

sh:minLength  a           rdf:Property ;
        rdfs:comment      "Specifies the minimum string length of each value node."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "min length"@en ;
        rdfs:range        xsd:integer .

sh:SPARQLSelectValidator
        a                 rdfs:Class ;
        rdfs:comment      "The class of validators based on SPARQL SELECT queries. The queries are evaluated for each focus node and are supposed to produce bindings for all focus nodes that do not conform."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "SPARQL SELECT validator"@en ;
        rdfs:subClassOf   sh:SPARQLSelectExecutable , sh:Validator .

sh:equals  a              rdf:Property ;
        rdfs:comment      "Specifies a property that must have the same values as the value nodes."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "equals"@en ;
        rdfs:range        rdf:Property .

sh:QualifiedMinCountConstraintComponent-qualifiedMinCount
        a                 sh:Parameter ;
        rdfs:isDefinedBy  sh: ;
        sh:datatype       xsd:integer ;
        sh:path           sh:qualifiedMinCount .

openapi:xmlName  a    rdf:Property ;
        rdfs:comment  "Replaces the name of the element/attribute used for the described schema property"@en ;
        rdfs:domain   openapi:XML ;
        rdfs:label    "xmlName"@en ;
        rdfs:range    xsd:string .

sh:SPARQLTarget  a        rdfs:Class ;
        rdfs:comment      "The class of targets that are based on SPARQL queries."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "SPARQL target"@en ;
        rdfs:subClassOf   sh:SPARQLSelectExecutable , sh:SPARQLAskExecutable , sh:Target .

openapi:minProperties
        a           rdf:Property ;
        rdfs:label  "minProperties"@en ;
        rdfs:range  xsd:int .

sh:node  a                rdf:Property ;
        rdfs:comment      "Specifies the node shape that all value nodes must conform to."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "node"@en ;
        rdfs:range        sh:NodeShape .

openapi:SecurityRequirement
        a             rdfs:Class ;
        rdfs:comment  "The required security scheme to execute this operation"@en ;
        rdfs:label    "SecurityRequirement"@en .

sh:DatatypeConstraintComponent
        a                 sh:ConstraintComponent ;
        rdfs:comment      "A constraint component that can be used to restrict the datatype of all value nodes."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Datatype constraint component"@en ;
        sh:parameter      sh:DatatypeConstraintComponent-datatype .

sh:MinInclusiveConstraintComponent
        a                 sh:ConstraintComponent ;
        rdfs:comment      "A constraint component that can be used to restrict the range of value nodes with a minimum inclusive value."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Min-inclusive constraint component"@en ;
        sh:parameter      sh:MinInclusiveConstraintComponent-minInclusive .

sh:Severity  a            rdfs:Class ;
        rdfs:comment      "The class of validation result severity levels, including violation and warning levels."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Severity"@en ;
        rdfs:subClassOf   rdfs:Resource .

openapi:GET  a  openapi:Method .

openapi:description  a  rdf:Property ;
        rdfs:label  "description"@en ;
        rdfs:range  xsd:string .

openapi:DELETE  a  openapi:Method .

sh:union  a               rdf:Property ;
        rdfs:comment      "A list of node expressions that shall be used together."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "union"@en .

sh:ClassConstraintComponent
        a                 sh:ConstraintComponent ;
        rdfs:comment      "A constraint component that can be used to verify that each value node is an instance of a given type."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Class constraint component"@en ;
        sh:parameter      sh:ClassConstraintComponent-class .

sh:shapesGraph  a         rdf:Property ;
        rdfs:comment      "Shapes graphs that should be used when validating this data graph."@en ;
        rdfs:domain       owl:Ontology ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "shapes graph"@en ;
        rdfs:range        owl:Ontology .

sh:qualifiedValueShapesDisjoint
        a                 rdf:Property ;
        rdfs:comment      "Can be used to mark the qualified value shape to be disjoint with its sibling shapes."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "qualified value shapes disjoint"@en ;
        rdfs:range        xsd:boolean .

sh:PrefixDeclaration  a   rdfs:Class ;
        rdfs:comment      "The class of prefix declarations, consisting of pairs of a prefix with a namespace."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Prefix declaration"@en ;
        rdfs:subClassOf   rdfs:Resource .

sh:QualifiedMaxCountConstraintComponent-qualifiedMaxCount
        a                 sh:Parameter ;
        rdfs:isDefinedBy  sh: ;
        sh:datatype       xsd:integer ;
        sh:path           sh:qualifiedMaxCount .

sh:rule  a                rdf:Property ;
        rdfs:comment      "The rules linked to a shape."@en ;
        rdfs:domain       sh:Shape ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "rule"@en ;
        rdfs:range        sh:Rule .

sh:DisjointConstraintComponent-disjoint
        a                 sh:Parameter ;
        rdfs:isDefinedBy  sh: ;
        sh:nodeKind       sh:IRI ;
        sh:path           sh:disjoint .

sh:SPARQLRule  a          rdfs:Class ;
        rdfs:comment      "The class of SHACL rules based on SPARQL CONSTRUCT queries."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "SPARQL CONSTRUCT rule"@en ;
        rdfs:subClassOf   sh:SPARQLConstructExecutable , sh:Rule .

openapi:openIdConnectUrl
        a             rdf:Property ;
        rdfs:comment  "OpenId Connect URL to discover OAuth2 configuration values. This MUST be in the form of a URL"@en ;
        rdfs:domain   openapi:OpenIdConnect ;
        rdfs:label    "openIdConnectUrl"@en ;
        rdfs:range    xsd:anyURI .

sh:ValidationResult  a    rdfs:Class ;
        rdfs:comment      "The class of validation results."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Validation result"@en ;
        rdfs:subClassOf   sh:AbstractResult .

sh:intersection  a        rdf:Property ;
        rdfs:comment      "A list of node expressions that shall be intersected."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "intersection"@en .

sh:suggestedShapesGraph
        a                 rdf:Property ;
        rdfs:comment      "Suggested shapes graphs for this ontology. The values of this property may be used in the absence of specific sh:shapesGraph statements."@en ;
        rdfs:domain       owl:Ontology ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "suggested shapes graph"@en ;
        rdfs:range        owl:Ontology .

sh:namespace  a           rdf:Property ;
        rdfs:comment      "The namespace associated with a prefix in a prefix declaration."@en ;
        rdfs:domain       sh:PrefixDeclaration ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "namespace"@en ;
        rdfs:range        xsd:anyURI .

sh:value  a               rdf:Property ;
        rdfs:comment      "An RDF node that has caused the result."@en ;
        rdfs:domain       sh:AbstractResult ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "value"@en .

openapi:DefaultResponse
        a                rdfs:Class ;
        rdfs:comment     "A default response object for all HTTP codes that are not covered individually"@en ;
        rdfs:label       "DefaultResponse"@en ;
        rdfs:subClassOf  openapi:Response .

sh:minCount  a            rdf:Property ;
        rdfs:comment      "Specifies the minimum number of values in the set of value nodes."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "min count"@en ;
        rdfs:range        xsd:integer .

sh:AbstractResult  a      rdfs:Class ;
        rdfs:comment      "The base class of validation results, typically not instantiated directly."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Abstract result"@en ;
        rdfs:subClassOf   rdfs:Resource .

<NewPet_tag>  a  rdf:Property .

openapi:response  a   rdf:Property ;
        rdfs:comment  "An operation's response"@en ;
        rdfs:domain   openapi:Operation ;
        rdfs:label    "response"@en ;
        rdfs:range    openapi:Response .

sh:result  a              rdf:Property ;
        rdfs:comment      "The validation results contained in a validation report."@en ;
        rdfs:domain       sh:ValidationReport ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "result"@en ;
        rdfs:range        sh:ValidationResult .

openapi:scope  a      rdf:Property ;
        rdfs:comment  "The available scopes for the OAuth2 security scheme. A map between the scope name and a short description for it"@en ;
        rdfs:label    "flow"@en ;
        rdfs:range    openapi:Scope .

openapi:wrapped  a    rdf:Property ;
        rdfs:comment  "Signifies whether the array is wrapped (for example, <books><book/><book/></books>) or unwrapped (<book/><book/>)"@en ;
        rdfs:domain   openapi:XML ;
        rdfs:label    "wrapped"@en ;
        rdfs:range    xsd:boolean .

openapi:discriminatorProperty
        a             rdf:Property ;
        rdfs:comment  "The name of the property in the payload that will hold the discriminator value."@en ;
        rdfs:domain   openapi:Discriminator ;
        rdfs:label    "discriminatorProperty"@en ;
        rdfs:range    xsd:string .

sh:SPARQLConstraint  a    rdfs:Class ;
        rdfs:comment      "The class of constraints based on SPARQL SELECT queries."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "SPARQL constraint"@en ;
        rdfs:subClassOf   sh:SPARQLSelectExecutable .

sh:jsLibraryURL  a        rdf:Property ;
        rdfs:comment      "Declares the URLs of a JavaScript library. This should be the absolute URL of a JavaScript file. Implementations may redirect those to local files."@en ;
        rdfs:domain       sh:JSLibrary ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "JavaScript library URL"@en ;
        rdfs:range        xsd:anyURI .

openapi:Operation  a  rdfs:Class ;
        rdfs:comment  "Describes a single API operation"@en ;
        rdfs:label    "Operation"@en .

sh:group  a               rdf:Property ;
        rdfs:comment      "Can be used to link to a property group to indicate that a property shape belongs to a group of related property shapes."@en ;
        rdfs:domain       sh:PropertyShape ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "group"@en ;
        rdfs:range        sh:PropertyGroup .

sh:SPARQLAskValidator
        a                 rdfs:Class ;
        rdfs:comment      "The class of validators based on SPARQL ASK queries. The queries are evaluated for each value node and are supposed to return true if the given node conforms."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "SPARQL ASK validator"@en ;
        rdfs:subClassOf   sh:SPARQLAskExecutable , sh:Validator .

sh:in   a                 rdf:Property ;
        rdfs:comment      "Specifies a list of allowed values so that each value node must be among the members of the given list."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "in"@en ;
        rdfs:range        rdf:List .

sh:ClosedConstraintComponent-ignoredProperties
        a                 sh:Parameter ;
        rdfs:isDefinedBy  sh: ;
        sh:optional       true ;
        sh:path           sh:ignoredProperties .

sh:expression  a          rdf:Property ;
        rdfs:comment      "The node expression that must return true for the value nodes."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "expression"@en .

openapi:email  a      rdf:Property ;
        rdfs:comment  "The email address of the contact person/organization. MUST be in the format of an email address."@en ;
        rdfs:domain   openapi:Contact ;
        rdfs:label    "email"@en ;
        rdfs:range    xsd:anyURI .

sh:MinCountConstraintComponent
        a                 sh:ConstraintComponent ;
        rdfs:comment      "A constraint component that can be used to restrict the minimum number of value nodes."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Min-count constraint component"@en ;
        sh:parameter      sh:MinCountConstraintComponent-minCount .

openapi:variable  a   rdf:Property ;
        rdfs:comment  "Represents a Server Variable for server URL template substitution"@en ;
        rdfs:domain   openapi:Server ;
        rdfs:label    "variable"@en ;
        rdfs:range    openapi:ServerVariable .

openapi:xml  a        rdf:Property ;
        rdfs:comment  "Adds additional metadata to describe the XML representation of a property"@en ;
        rdfs:domain   sh:Shape ;
        rdfs:label    "xml"@en ;
        rdfs:range    openapi:XML .

sh:disjoint  a            rdf:Property ;
        rdfs:comment      "Specifies a property where the set of values must be disjoint with the value nodes."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "disjoint"@en ;
        rdfs:range        rdf:Property .

<Error_message>  a  rdf:Property .

openapi:tokenUrl  a   rdf:Property ;
        rdfs:comment  "The token URL to be used for this flow. This MUST be in the form of a URL."@en ;
        rdfs:domain   openapi:OAuthFlow ;
        rdfs:label    "tokenUrl"@en ;
        rdfs:range    xsd:anyURI .

openapi:parameterName
        a             rdf:Property ;
        rdfs:comment  "The name of the header, query or cookie parameter to be used."@en ;
        rdfs:domain   openapi:ApiKey ;
        rdfs:label    "parameterName"@en ;
        rdfs:range    xsd:string .

sh:MinLengthConstraintComponent-minLength
        a                 sh:Parameter ;
        rdfs:isDefinedBy  sh: ;
        sh:datatype       xsd:integer ;
        sh:maxCount       1 ;
        sh:path           sh:minLength .

sh:propertyValidator  a   rdf:Property ;
        rdfs:comment      "The validator(s) used to evaluate a constraint in the context of a property shape."@en ;
        rdfs:domain       sh:ConstraintComponent ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "property validator"@en ;
        rdfs:range        sh:Validator .

sh:ValidationReport  a    rdfs:Class ;
        rdfs:comment      "The class of SHACL validation reports."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Validation report"@en ;
        rdfs:subClassOf   rdfs:Resource .

openapi:refreshUrl  a  rdf:Property ;
        rdfs:comment  "The URL to be used for obtaining refresh tokens. This MUST be in the form of a URL."@en ;
        rdfs:domain   openapi:OAuthFlow ;
        rdfs:label    "refreshUrl"@en ;
        rdfs:range    xsd:anyURI .

sh:EqualsConstraintComponent
        a                 sh:ConstraintComponent ;
        rdfs:comment      "A constraint component that can be used to verify that the set of value nodes is equal to the set of nodes that have the focus node as subject and the value of a given property as predicate."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Equals constraint component"@en ;
        sh:parameter      sh:EqualsConstraintComponent-equals .

sh:SPARQLConstructExecutable
        a                 rdfs:Class ;
        rdfs:comment      "The class of SPARQL executables that are based on a CONSTRUCT query."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "SPARQL CONSTRUCT executable"@en ;
        rdfs:subClassOf   sh:SPARQLExecutable .

openapi:maxProperties
        a           rdf:Property ;
        rdfs:label  "maxProperties"@en ;
        rdfs:range  xsd:integer .

sh:HasValueConstraintComponent-hasValue
        a                 sh:Parameter ;
        rdfs:isDefinedBy  sh: ;
        sh:path           sh:hasValue .

openapi:extraPropertySchema
        a             rdf:Property ;
        rdfs:comment  "Specifies a list of shapes so that the value nodes must conform to exactly one of the shapes."@en ;
        rdfs:label    "exactly one"@en ;
        rdfs:range    sh:Shape .

openapi:parameter  a  rdf:Property ;
        rdfs:comment  "An operation's parameter"@en ;
        rdfs:domain   openapi:Operation ;
        rdfs:label    "parameter"@en ;
        rdfs:range    openapi:Parameter .

sh:nodeValidator  a       rdf:Property ;
        rdfs:comment      "The validator(s) used to evaluate a constraint in the context of a node shape."@en ;
        rdfs:domain       sh:ConstraintComponent ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "shape validator"@en ;
        rdfs:range        sh:Validator .

openapi:RequestBodyMediaType
        a                rdfs:Class ;
        rdfs:comment     "A Request Body Media Type Object provides schema for the identified media type"@en ;
        rdfs:label       "RequestBodyMediaType"@en ;
        rdfs:subClassOf  openapi:MediaType .

openapi:4xxResponse  a   rdfs:Class ;
        rdfs:comment     "Represents all response codes between [400-499]"@en ;
        rdfs:label       "4xxResponse"@en ;
        rdfs:subClassOf  openapi:Response .

sh:     a                        owl:Ontology ;
        rdfs:comment             "This vocabulary defines terms used in SHACL, the W3C Shapes Constraint Language."@en ;
        rdfs:label               "W3C Shapes Constraint Language (SHACL) Vocabulary"@en ;
        sh:declare               [ sh:namespace  "http://www.w3.org/ns/shacl#"^^xsd:anyURI ;
                                   sh:prefix     "sh"
                                 ] ;
        sh:suggestedShapesGraph  <http://www.w3.org/ns/shacl-shacl#> .

sh:Validator  a           rdfs:Class ;
        rdfs:comment      "The class of validators, which provide instructions on how to process a constraint definition. This class serves as base class for the SPARQL-based validators and other possible implementations."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Validator"@en ;
        rdfs:subClassOf   rdfs:Resource .

sh:maxInclusive  a        rdf:Property ;
        rdfs:comment      "Specifies the maximum inclusive value of each value node."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "max inclusive"@en .

openapi:supportedOperation
        a             rdf:Property ;
        rdfs:comment  "An operation supported by the API or a specific entity"@en ;
        rdfs:label    "supportedOperation"@en ;
        rdfs:range    openapi:Operation .

openapi:Scope  a      rdfs:Class ;
        rdfs:comment  "The available scopes for the OAuth2 security scheme"@en ;
        rdfs:label    "Scope"@en .

sh:MinExclusiveConstraintComponent-minExclusive
        a                 sh:Parameter ;
        rdfs:isDefinedBy  sh: ;
        sh:maxCount       1 ;
        sh:nodeKind       sh:Literal ;
        sh:path           sh:minExclusive .

sh:datatype  a            rdf:Property ;
        rdfs:comment      "Specifies an RDF datatype that all value nodes must have."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "datatype"@en ;
        rdfs:range        rdfs:Datatype .

<service_server>  a   openapi:Server ;
        openapi:host  "http://petstore.swagger.io/api"^^xsd:anyURI .

openapi:requestHeader
        a             rdf:Property ;
        rdfs:comment  "An operation's request header"@en ;
        rdfs:domain   openapi:Operation ;
        rdfs:label    "requestHeader"@en ;
        rdfs:range    openapi:Header .

sh:AndConstraintComponent
        a                 sh:ConstraintComponent ;
        rdfs:comment      "A constraint component that can be used to test whether a value node conforms to all members of a provided list of shapes."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "And constraint component"@en ;
        sh:parameter      sh:AndConstraintComponent-and .

sh:jsFunctionName  a      rdf:Property ;
        rdfs:comment      "The name of the JavaScript function to execute."@en ;
        rdfs:domain       sh:JSExecutable ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "JavaScript function name"@en ;
        rdfs:range        xsd:string .

sh:resultAnnotation  a    rdf:Property ;
        rdfs:comment      "Links a SPARQL validator with zero or more sh:ResultAnnotation instances, defining how to derive additional result properties based on the variables of the SELECT query."@en ;
        rdfs:domain       sh:SPARQLSelectValidator ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "result annotation"@en ;
        rdfs:range        sh:ResultAnnotation .

sh:MinExclusiveConstraintComponent
        a                 sh:ConstraintComponent ;
        rdfs:comment      "A constraint component that can be used to restrict the range of value nodes with a minimum exclusive value."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Min-exclusive constraint component"@en ;
        sh:parameter      sh:MinExclusiveConstraintComponent-minExclusive .

sh:Parameterizable  a     rdfs:Class ;
        rdfs:comment      "Superclass of components that can take parameters, especially functions and constraint components."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Parameterizable"@en ;
        rdfs:subClassOf   rdfs:Resource .

openapi:ExternalDoc  a  rdfs:Class ;
        rdfs:comment  "Allows referencing an external resource for extended documentation."@en ;
        rdfs:label    "ExternalDocumentation"@en .

openapi:supportedEntity
        a             rdf:Property ;
        rdfs:comment  "An entity known to be supported by the API"@en ;
        rdfs:domain   openapi:Document ;
        rdfs:label    "supportedEntity"@en ;
        rdfs:range    sh:Shape .

openapi:encoding  a   rdf:Property ;
        rdfs:comment  "A map between a property name and its encoding information"@en ;
        rdfs:domain   openapi:RequestBodyMediaType ;
        rdfs:label    "encoding"@en ;
        rdfs:range    openapi:Encoding .

sh:class  a               rdf:Property ;
        rdfs:comment      "The type that all value nodes must have."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "class"@en ;
        rdfs:range        rdfs:Class .

<Error_messagePropertyShape>
        a             sh:PropertyShape ;
        rdfs:label    "Error_messagePropertyShape" ;
        openapi:name  "message" ;
        sh:datatype   xsd:string ;
        sh:path       <Error_message> .

<NewPet_namePropertyShape>
        a             sh:PropertyShape ;
        rdfs:label    "NewPet_namePropertyShape" ;
        openapi:name  "name" ;
        sh:datatype   xsd:string ;
        sh:path       <NewPet_name> .

<service_info>  a               openapi:Info ;
        openapi:contact         [ a                    openapi:Contact ;
                                  openapi:contactName  "Swagger API Team" ;
                                  openapi:email        "apiteam@swagger.io"^^xsd:anyURI ;
                                  openapi:url          "http://swagger.io"^^xsd:anyURI
                                ] ;
        openapi:description     "A sample API that uses a petstore as an example to demonstrate features in the OpenAPI 3.0 specification" ;
        openapi:license         [ openapi:licenseName  "Apache 2.0" ;
                                  openapi:url          "https://www.apache.org/licenses/LICENSE-2.0.html"^^xsd:anyURI
                                ] ;
        openapi:serviceTitle    "Swagger Petstore" ;
        openapi:termsOfService  "http://swagger.io/terms/"^^xsd:anyURI .

<ThirdPetNodeShape>  a  sh:NodeShape ;
        rdfs:label      "ThirdPetNodeShape" ;
        sh:property     <TheCategoryPropertyShape> ;
        sh:targetClass  <OtherPet> .

sh:BlankNode  a           sh:NodeKind ;
        rdfs:comment      "The node kind of all blank nodes."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Blank node"@en .

sh:predicate  a           rdf:Property ;
        rdfs:comment      "An expression producing the properties that shall be inferred as predicates."@en ;
        rdfs:domain       sh:TripleRule ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "predicate"@en .

sh:SPARQLTargetType  a    rdfs:Class ;
        rdfs:comment      "The (meta) class for parameterizable targets that are based on SPARQL queries."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "SPARQL target type"@en ;
        rdfs:subClassOf   sh:SPARQLSelectExecutable , sh:SPARQLAskExecutable , sh:TargetType .

sh:uniqueLang  a          rdf:Property ;
        rdfs:comment      "Specifies whether all node values must have a unique (or no) language tag."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "unique languages"@en ;
        rdfs:range        xsd:boolean .

sh:JSValidator  a         rdfs:Class ;
        rdfs:comment      "A SHACL validator based on JavaScript. This can be used to declare SHACL constraint components that perform JavaScript-based validation when used."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "JavaScript validator"@en ;
        rdfs:subClassOf   sh:Validator , sh:JSExecutable .

openapi:Cookie  a     rdfs:Class ;
        rdfs:comment  "Used to pass a specific cookie value to the API"@en ;
        rdfs:label    "Cookie"@en .

openapi:2xxResponse  a   rdfs:Class ;
        rdfs:comment     "Represents all response codes between [200-299]"@en ;
        rdfs:label       "2xxResponse"@en ;
        rdfs:subClassOf  openapi:Response .

openapi:termsOfService
        a             rdf:Property ;
        rdfs:comment  "A URL to the Terms of Service for the API. MUST be in the format of a URL."@en ;
        rdfs:domain   openapi:Info ;
        rdfs:label    "termsOfService"@en ;
        rdfs:range    xsd:anyURI .

sh:message  a             rdf:Property ;
        rdfs:comment      "A human-readable message (possibly with placeholders for variables) explaining the cause of the result."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "message"@en .

sh:IRIOrLiteral  a        sh:NodeKind ;
        rdfs:comment      "The node kind of all IRIs or literals."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "IRI or literal"@en .

openapi:host  a       rdf:Property ;
        rdfs:comment  "The target host's url"@en ;
        rdfs:domain   openapi:Server ;
        rdfs:label    "host"@en ;
        rdfs:range    xsd:anyURI .

openapi:version  a   rdf:Property ;
        rdfs:domain  openapi:Document ;
        rdfs:label   "version"@en ;
        rdfs:range   xsd:string .

sh:InConstraintComponent
        a                 sh:ConstraintComponent ;
        rdfs:comment      "A constraint component that can be used to exclusively enumerate the permitted value nodes."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "In constraint component"@en ;
        sh:parameter      sh:InConstraintComponent-in .

openapi:pathName  a  rdf:Property ;
        rdfs:domain  openapi:Path ;
        rdfs:label   "pathName"@en ;
        rdfs:range   xsd:string .

openapi:scheme  a     rdf:Property ;
        rdfs:comment  "The name of the HTTP Authorization scheme to be used in the Authorization header"@en ;
        rdfs:domain   openapi:Http ;
        rdfs:label    "scheme"@en ;
        rdfs:range    xsd:string .

sh:description  a         rdf:Property ;
        rdfs:comment      "Human-readable descriptions for the property in the context of the surrounding shape."@en ;
        rdfs:domain       sh:PropertyShape ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "description"@en .

<OtherPet_speed>  a  rdf:Property .

sh:Parameter  a           rdfs:Class ;
        rdfs:comment      "The class of parameter declarations, consisting of a path predicate and (possibly) information about allowed value type, cardinality and other characteristics."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Parameter"@en ;
        rdfs:subClassOf   sh:PropertyShape .

sh:targetSubjectsOf  a    rdf:Property ;
        rdfs:comment      "Links a shape to a property, indicating that all subjects of triples that have the given property as their predicate must conform to the shape."@en ;
        rdfs:domain       sh:Shape ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "target subjects of"@en ;
        rdfs:range        rdf:Property .

openapi:supportedSecurity
        a             rdf:Property ;
        rdfs:comment  "A security type supported by the API "@en ;
        rdfs:domain   openapi:Document ;
        rdfs:label    "supportedSecurity"@en ;
        rdfs:range    openapi:Security .

openapi:member  a    rdf:Property ;
        rdfs:domain  openapi:Collection ;
        rdfs:label   "member"@en ;
        rdfs:range   sh:Shape .

_:b1    a                 openapi:Path ;
        openapi:pathName  "/pets" .

openapi:summary  a    rdf:Property ;
        rdfs:comment  "A short summary of what the operation does."@en ;
        rdfs:domain   openapi:Operation ;
        rdfs:label    "summary"@en ;
        rdfs:range    xsd:string .

sh:MaxCountConstraintComponent
        a                 sh:ConstraintComponent ;
        rdfs:comment      "A constraint component that can be used to restrict the maximum number of value nodes."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Max-count constraint component"@en ;
        sh:parameter      sh:MaxCountConstraintComponent-maxCount .

sh:select  a              rdf:Property ;
        rdfs:comment      "The SPARQL SELECT query to execute."@en ;
        rdfs:domain       sh:SPARQLSelectExecutable ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "select"@en ;
        rdfs:range        xsd:string .

sh:MaxLengthConstraintComponent
        a                 sh:ConstraintComponent ;
        rdfs:comment      "A constraint component that can be used to restrict the maximum string length of value nodes."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Max-length constraint component"@en ;
        sh:parameter      sh:MaxLengthConstraintComponent-maxLength .

openapi:cookie  a     rdf:Property ;
        rdfs:comment  "An operation's cookie"@en ;
        rdfs:domain   openapi:Operation ;
        rdfs:label    "cookie"@en ;
        rdfs:range    openapi:Cookie .

sh:prefix  a              rdf:Property ;
        rdfs:comment      "The prefix of a prefix declaration."@en ;
        rdfs:domain       sh:PrefixDeclaration ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "prefix"@en ;
        rdfs:range        xsd:string .

sh:OrConstraintComponent
        a                 sh:ConstraintComponent ;
        rdfs:comment      "A constraint component that can be used to restrict the value nodes so that they conform to at least one out of several provided shapes."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Or constraint component"@en ;
        sh:parameter      sh:OrConstraintComponent-or .

sh:resultMessage  a       rdf:Property ;
        rdfs:comment      "Human-readable messages explaining the cause of the result."@en ;
        rdfs:domain       sh:AbstractResult ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "result message"@en .

openapi:responseHeader
        a             rdf:Property ;
        rdfs:comment  "Maps a header to a response"@en ;
        rdfs:domain   openapi:Response ;
        rdfs:label    "responseHeader"@en ;
        rdfs:range    openapi:Header .

sh:Literal  a             sh:NodeKind ;
        rdfs:comment      "The node kind of all literals."@en ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "Literal"@en .

sh:LanguageInConstraintComponent-languageIn
        a                 sh:Parameter ;
        rdfs:isDefinedBy  sh: ;
        sh:maxCount       1 ;
        sh:path           sh:languageIn .

sh:construct  a           rdf:Property ;
        rdfs:comment      "The SPARQL CONSTRUCT query to execute."@en ;
        rdfs:domain       sh:SPARQLConstructExecutable ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "construct"@en ;
        rdfs:range        xsd:string .

sh:MinInclusiveConstraintComponent-minInclusive
        a                 sh:Parameter ;
        rdfs:isDefinedBy  sh: ;
        sh:maxCount       1 ;
        sh:nodeKind       sh:Literal ;
        sh:path           sh:minInclusive .

sh:focusNode  a           rdf:Property ;
        rdfs:comment      "The focus node that was validated when the result was produced."@en ;
        rdfs:domain       sh:AbstractResult ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "focus node"@en .

openapi:Security  a   rdfs:Class ;
        rdfs:comment  "Defines a security scheme that can be used by the operations."@en ;
        rdfs:label    "Security"@en .

openapi:  a         owl:Ontology ;
        rdfs:label  "Open API Specification Vocabulary"@en .

<NewPet_tagPropertyShape>
        a             sh:PropertyShape ;
        rdfs:label    "NewPet_tagPropertyShape" ;
        openapi:name  "tag" ;
        sh:datatype   xsd:string ;
        sh:path       <NewPet_tag> .

openapi:discriminator
        a            rdf:Property ;
        rdfs:Domain  sh:Shape ;
        rdfs:label   "discriminator"@en ;
        rdfs:range   openapi:Discriminator .

sh:returnType  a          rdf:Property ;
        rdfs:comment      "The expected type of values returned by the associated function."@en ;
        rdfs:domain       sh:Function ;
        rdfs:isDefinedBy  sh: ;
        rdfs:label        "return type"@en ;
        rdfs:range        rdfs:Class .
