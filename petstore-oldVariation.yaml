# Random no SOAS annotation case for generic purposes.
openapi: "3.0.0"
info:
  version: 1.0.0
  title: Swagger Petstore
  description: A sample API that uses a petstore as an example to demonstrate features in the OpenAPI 3.0 specification
  termsOfService: http://swagger.io/terms/
  contact:
    name: Swagger API Team
    email: apiteam@swagger.io
    url: http://swagger.io
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://petstore.swagger.io/api
paths:
  /pets:
    get:
      description: |
        Returns all pets from the system.
      operationId: findPets
      parameters:
        - name: tags
          in: query
          description: tags to filter by
          required: false
          style: form
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: pet response /pets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a old pet in the store. Duplicates are allowed
      operationId: addPet
      requestBody:
        description: Pet to add to the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OldPet'
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /pets/{id}:
    get:
      description: Returns a user based on a single ID, if the user does not have access to the pet
      operationId: find pet by id
      parameters:
        - name: id
          in: path
          description: ID of pet to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: pet response /Simple Case/
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        # '201':
          # description: Pet with discriminator OldPetDisc /Case 1 (ii)/ 
          # content:
            # application/json:
              # schema:
                # $ref: '#/components/schemas/PetDisc'
        # '202':
          # description: Pet with SOAS /Case 2/
          # content:
            # application/json:
              # schema:
                # $ref: '#/components/schemas/PetSOAS'
        # '203':
          # description: Pet with SOASOldPet /Case 3/
          # content:
            # application/json:
              # schema:
                # $ref: '#/components/schemas/PetWithSOASOldPet'
        # '204':
          # description: Pet AllSOAS /Case 4/
          # content:
            # application/json:
              # schema:
                # $ref: '#/components/schemas/PetAllSOAS'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: deletes a single pet based on the ID supplied
      operationId: deletePet
      parameters:
        - name: id
          in: path
          description: ID of pet to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: pet deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Pet:
      allOf:
        - $ref: '#/components/schemas/OldPet'
        - type: object
          required:
          - id
          properties:
            id:
              type: integer
              format: int64
    
    PetDisc:
      allOf:
        - $ref: '#/components/schemas/OldPetDisc'
        - type: object
          required:
          - id
          properties:
            id:
              type: integer
              format: int64

    PetSOAS:
      x-refersTo: htpp://schema.org/PetSOAS
      allOf:
        - $ref: '#/components/schemas/OldPetDisc'
        - type: object
          required:
          - id
          properties:
            id:
              type: integer
              format: int64

    PetWithSOASOldPet:
      allOf:
        - $ref: '#/components/schemas/OldPetSOAS'
        - type: object
          required:
          - id
          properties:
            id:
              type: integer
              format: int64

    PetAllSOAS:
      x-refersTo: http://schema.org/PetAllSOAS 
      allOf:
        - $ref: '#/components/schemas/OldPetSOAS'
        - type: object
          required:
          - id
          properties:
            id:
              type: integer
              format: int64

    OldPet:
      type: object
      required:
        - name  
      properties:
        name:
          type: string
        tag:
          type: string

    OldPetDisc:
      type: object
      discriminator:
        propertyName: petType
      required:
        - speed
      properties:
        speed:
          type: string
        petType:
          type: string
    
    
    OldPetSOAS:
      x-refersTo: http://schema.org/OldPetSOAS
      type: object
      discriminator:
        propertyName: petType
      required:
        - speed
      properties:
        speed:
          type: string
        petType:
          type: string

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string